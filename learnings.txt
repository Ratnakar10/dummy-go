Go Learnings
---------------------------------------------------------
1. How to initialize a Go Project
2. What is go mod init command (go mod init <module-name>)
   - Go modules provide a way to manage dependencies in Go projects
   - go.mod file serves as the module definition for your project
   - by doing go mod init comand you are creating a Go module, not a full project structure
   - A module contains one or more packages—each package is a directory of .go files with package declaration
   - The go.mod at the module root defines:
        * The module path (used in import statements)
        * The Go version
        * The list of dependencies once you add external imports
   - go mod init does
        * It creates a go.mod file:
        * Declares the root of your module (folder containing go.mod)
        * Enables tracking and versioning of packages and their dependencies
   - Definition
        * Each Go module is defined by a go.mod file that describes the module’s properties, including its dependencies on other modules and on versions of Go
3. Command - go mod tidy
   - Definition
        * go mod tidy is a Go tool that keeps your module’s dependency files clean, accurate, and in sync with your source code. 
          It scans all imports in your .go files (including test files), automatically adds any missing modules needed to build your code, 
          removes any dependencies that your project no longer requires, and updates your checksum file (go.sum) by adding hashes for new dependencies and 
          deleting entries for those removed.
4. Command - go.sum (Checksum File)
   - Definition
        * A go.sum file is an automatically generated security manifest for your Go module. 
          It records SHA‑256 checksums (hashes) of every dependency your project uses—both direct and indirect. 
          Each line maps a specific module version to its hash. When Go fetches a module, it recomputes the checksum and compares it with the one in go.sum. 
          If they don't match, the build is blocked. This protects you from tampered or corrupted dependencies 
5. Checksum File (General Definition) 
    - Definition
        * A checksum file is a record that stores cryptographic hashes of downloaded dependency packages. 
          It's generated by commands like go build, go test, go get, or go mod tidy. 
          These hashes ensure integrity, security, and reproducibility
6. Explore cached modules
   - commands
     * cd "$GOPATH/pkg/mod" (default)
     * cd "$HOME/go/pkg/mod" (explicit)
7. View what’s in the Module Cache
   - command
     * go mod download -json
8. Clean up the Module Cache
   - command
     * go clean -modcache
9. Clear the Build Cache
   - command
     * go clean -cache

Go Channels
-----------------
Channels are bidirectional, sends data to other channels and receives data
Send only channels, Read only channels




OTHERS
---------------------------------------------------------
# Give yourself ownership of the whole folder
sudo chown -R "$USER" "/Users/Rat/Rat Projects/learn-go"

# Give full read/write/execute access to you
chmod -R u+rwX "/Users/Rat/Rat Projects/learn-go"
